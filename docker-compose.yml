version: "3.9"
services:
  postgres:
    image: postgres:10.9-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwer12345
    ports:
      - "5432:5432"
    networks:
      - spring-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - spring-network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - spring-network

  spring-boot-provider-ms:
    image: spring-boot-provider-ms
    container_name: spring-provider-ms
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - spring-network

  spring-boot-consumer-ms:
    image: spring-boot-consumer-ms
    container_name: spring-consumer-ms
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - spring-network

networks:
  spring-network:
    driver: bridge
